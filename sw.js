const t="/srt-player/",c="srt-cache",r=["","index.js","index.css","version.js","srt-player.svg","github.png","fonts/MaterialIcons-Regular.ttf","fonts/MaterialIconsOutlined-Regular.otf"].map(e=>t+e).concat(t.substring(0,t.length-1)),a=async()=>{const e=await caches.open(c),s=r.map(n=>new Request(n,{cache:"reload"}));return await e.addAll(s)};self.addEventListener("install",e=>{e.waitUntil(Promise.resolve(a()))});self.addEventListener("fetch",e=>{e.respondWith((async()=>{const s=await caches.match(e.request);return s||await fetch(e.request)})())});self.addEventListener("message",async e=>{if(e.data.type==="UPDATE"){const s=e.ports[0];await i(),s.postMessage("updated")}});async function i(){const e=await caches.keys();await Promise.all(e.map(s=>s.startsWith("srt-")?caches.delete(s):Promise.resolve(!0))),await a()}
